import telebot
import datetime
import psycopg2
import schedule
import time
import threading
import os

TOKEN = '6068054556:AAGXnemAIHfr6xNlrHMjqt3X0xfxW5Ki-70'
bot = telebot.TeleBot(TOKEN)


def connect_db():
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    conn = psycopg2.connect(
        host=os.environ.get('DB_HOST'),
        port=5432,
        dbname='canalservis',
        user='dev',
        password='canalservis'
    )
    return conn


def get_orders():
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    conn = connect_db()
    cur = conn.cursor()
    cur.execute(
        "SELECT ordernumber, deliverytime FROM orderbook WHERE deliverytime < %s",
        (datetime.date.today(),))
    orders = cur.fetchall()
    cur.close()
    conn.close()
    return orders


def create_table():
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î PostgreSQL –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞
    try:
        conn = connect_db()
        sql_create_table_query = """CREATE TABLE IF NOT EXISTS telegrambot(
                id SERIAL,
                chat_id INT PRIMARY KEY,
                name VARCHAR(30),
                user_id INT,
                addtime TIMESTAMP)"""
        cur = conn.cursor()
        cur.execute(sql_create_table_query)
        conn.commit()
        cur.close()
        conn.close()
        return True
    except:
        print('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
        return False


def insert_user(chat_id, name, user_id):
    # –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –ë–î —é–∑–µ—Ä–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    conn = connect_db()
    cur = conn.cursor()
    time = datetime.datetime.now()
    cur.execute("""INSERT INTO telegrambot (chat_id, name, user_id, addtime)
                VALUES (%s, %s, %s, %s) ON CONFLICT (chat_id) DO NOTHING;""",
                (chat_id, name, user_id, time))
    conn.commit()
    cur.close()
    conn.close()
    print('–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
    return True


def delete_user(chat_id):
    # –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —é–∑–µ—Ä–∞ –∏–∑ –ë–î –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    conn = connect_db()
    cur = conn.cursor()
    cur.execute('DELETE FROM telegrambot WHERE chat_id=(%s)', (chat_id,))
    conn.commit()
    cur.close()
    conn.close()
    return True


def get_users():
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    conn = connect_db()
    cur = conn.cursor()
    cur.execute('SELECT id, chat_id FROM telegrambot')
    users = cur.fetchall()
    cur.close()
    conn.close()
    return users


@ bot.message_handler(commands=['start'])
def start(message):
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    mess = f'üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n'
    mess += '–Ø –±–æ—Ç –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.\n'
    mess += '–Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è!\n'
    mess += '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /subscribe'
    bot.send_message(message.chat.id, mess, parse_mode='html')


@ bot.message_handler(commands=['subscribe'])
def subscribe(message):
    # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É
    mess = '–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö.\n'
    mess += '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø–æ—Å—Ç—É–ø–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00.\n'
    mess += '–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–≤–µ–¥–∏—Ç–µ /end'
    insert_user(message.chat.id,
                f'{message.from_user.first_name} {message.from_user.last_name}',
                message.from_user.id)
    bot.send_message(message.chat.id, mess, parse_mode='html')


@ bot.message_handler(commands=['end'])
def end(message):
    # –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    delete_user(message.chat.id)
    bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
                     parse_mode='html')


def send_orders_message(bot):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞–º–∏
    users = get_users()
    if len(users) > 0:
        time = datetime.datetime.now()
        print(time, ' –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')
        orders = get_orders()
        for user in users:
            chat_id = user[1]
            if len(orders) == 0:
                bot.send_message(
                    chat_id, '–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç')
            else:
                message = "–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:\n"
                for order in orders:
                    if len(message) > 3500:
                        bot.send_message(chat_id, message)
                    message += f'–ó–∞–∫–∞–∑ ‚Ññ {order[0]} - —Å—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏ {order[1]};\n'
                message += '–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤–≤–µ–¥–∏—Ç–µ /end'
                bot.send_message(chat_id, message)


def schedule_messages():
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00
    # schedule.every(10).seconds.do(send_orders_message, bot=bot)
    schedule.every().day.at("10:00").do(send_orders_message, bot=bot)
    while True:
        schedule.run_pending()
        time.sleep(2)


def main():
    create_table()
    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    thread = threading.Thread(target=schedule_messages)
    thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()
